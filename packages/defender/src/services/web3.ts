// Types
import type { AutotaskRelayerParams } from "defender-relay-client";
import type { DefenderRelaySenderOptions } from "defender-relay-client/lib/web3/sender";

// 3rd Party Modules
import { DefenderRelayProvider } from "defender-relay-client/lib/web3";
import { default as Web3 } from "web3";

/**
 * Creates new Web3 instance using a given OpenZeppelin Defender Relayer as provider.  All transactions
 * will originate from the Relayer.
 * @param credentials Internal credentials generated by Defender for communicating with other services.
 * @param relayerARN Internal identifier of the relayer function used by the relay-client.
 * @param config Provider options.
 * @returns {Web3} Web3 Instance.
 */
function web3Provider(
  credentials: string,
  relayerARN: string,
  config: DefenderRelaySenderOptions = { speed: "average" }
): Web3 {
  return new Web3(
    new DefenderRelayProvider(
      { credentials, relayerARN } as AutotaskRelayerParams,
      config
    )
  );
}

export default web3Provider;
